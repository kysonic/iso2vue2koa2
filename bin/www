'use strict'

require('babel-core/register')

const http = require('http')
const app = require('../server').default
const port = process.env.PORT || 3000

/**
 * Handle on listening event. Show messages and etc.
 * @private
 */
function _listeningHandler() {
    const address = this.address()
    const bind = typeof address === 'string'
        ? 'pipe ' + address
        : 'port ' + address.port;
    console.log('Listening on ' + bind)
}
// Uncaught error
process.on('uncaughtException', _errorHandler)
/**
 * Handle server errors
 * @param error - error object
 * @private
 */
function _errorHandler(error) {
    if (error.syscall !== 'listen') throw error

    var bind = typeof app.context.port === 'string' ? 'Pipe ' + port : 'Port ' + port

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges')
            process.exit(1)
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use')
            process.exit(1)
            break
        default:
            throw error
    }
}

/**
 * Start server
 * @private
 */
function _startServer() {
    const server = http.createServer(app.callback())
    server.listen(app.context.port || 3000)

    server.on('error', _errorHandler)

    server.on('listening', _listeningHandler.bind(server))
}

_startServer()

